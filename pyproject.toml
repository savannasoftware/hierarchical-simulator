[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "hierarchical-simulator"
version = "1.0.0"
description = "A comprehensive hierarchical data simulator for multilevel modeling research"
authors = ["Moses Kabungo <mose.kabungo@example.com>"]
maintainers = ["Moses Kabungo <mose.kabungo@example.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://hm.digitart.com/hierarchical-simulator"
repository = "https://github.com/savannasoftware/hierarchical-simulator"
documentation = "https://hierarchical-simulator.readthedocs.io"
keywords = [
  "hierarchical-modeling",
  "multilevel-data",
  "simulation",
  "statistics",
  "mixed-effects",
  "research",
  "data-generation",
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Education",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Typing :: Typed",
]
packages = [{ include = "hierarchical_simulator" }]

[tool.poetry.dependencies]
python = ">=3.10"
numpy = ">=1.20.0"
pandas = ">=1.3.0"
scipy = ">=1.7.0"
matplotlib = { version = ">=3.3.0", optional = true }
seaborn = { version = ">=0.11.0", optional = true }
pytest = "^8.4.2"
pytest-cov = "^7.0.0"
hypothesis = "^6.142.4"

[tool.poetry.group.test.dependencies]
pytest = ">=6.0"
pytest-cov = ">=2.10"
pytest-xdist = ">=2.0"
hypothesis = ">=6.0"

[tool.poetry.group.dev.dependencies]
black = ">=22.0"
flake8 = ">=4.0"
isort = ">=5.0"
mypy = ">=0.910"
pre-commit = ">=2.15"
bump2version = ">=1.0"

[tool.poetry.group.docs.dependencies]
sphinx = ">=4.0"
sphinx-rtd-theme = ">=1.0"
nbsphinx = ">=0.8"
ipython = ">=7.0"

[tool.poetry.extras]
viz = ["matplotlib", "seaborn"]

[tool.poetry.scripts]
hierarchical-simulator = "hierarchical_simulator.cli:main"


# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["hierarchical_simulator"]

# pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
  "integration: marks tests as integration tests",
  "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src/hierarchical_simulator"]
omit = ["*/tests/*", "*/test_*", "setup.py"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "class .*\\bProtocol\\):",
  "@(abc\\.)?abstractmethod",
]

# MyPy configuration
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["scipy.*", "matplotlib.*", "seaborn.*"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true
ignore_missing_imports = true

# Ruff configuration (modern linter)
[tool.ruff]
target-version = "py38"
line-length = 88
select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I",  # isort
  "B",  # flake8-bugbear
  "C4", # flake8-comprehensions
  "UP", # pyupgrade
]
ignore = [
  "E501", # line too long, handled by black
  "B008", # do not perform function calls in argument defaults
  "C901", # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = [
  "B011",
  "F401",
  "F811",
  "E402",
] # Allow imports and redefinitions in tests
